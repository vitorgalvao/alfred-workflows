<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.playaddress</string>
	<key>connections</key>
	<dict>
		<key>174651EE-D8CF-4041-B1FD-C2F8D2646EC1</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>3238CA6D-80AE-4CD7-B09C-6297766F4936</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>197D2E43-384A-44B1-BE86-B36582E4CE52</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>3F2114BA-DAA7-4DF6-BD3D-DAFD6E7439F0</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>2C17F6E1-CA91-4D8D-B014-91010DFDCD35</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>359734FE-C703-415A-9038-E76AF0A25AAA</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string>Download video to watch later</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>79289C24-D237-4E6E-A781-3C54066C0461</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>3238CA6D-80AE-4CD7-B09C-6297766F4936</key>
		<array/>
		<key>359734FE-C703-415A-9038-E76AF0A25AAA</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>174651EE-D8CF-4041-B1FD-C2F8D2646EC1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>3AB464F1-6E2E-4CF3-A4A0-AFDA2F41AAC1</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>174651EE-D8CF-4041-B1FD-C2F8D2646EC1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>CC5C8F05-C2B1-410B-B94A-46D8B7C429B0</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>3F2114BA-DAA7-4DF6-BD3D-DAFD6E7439F0</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>79289C24-D237-4E6E-A781-3C54066C0461</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>3AB464F1-6E2E-4CF3-A4A0-AFDA2F41AAC1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>sourceoutputuid</key>
				<string>0BC66730-6EE7-4E58-B4AA-61C984B7ED91</string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>8FE08360-28F3-4F26-8523-75D368B83282</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>8FE08360-28F3-4F26-8523-75D368B83282</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>174651EE-D8CF-4041-B1FD-C2F8D2646EC1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>197D2E43-384A-44B1-BE86-B36582E4CE52</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Play the URL in the frontmost browser or clipboard</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>PlayAddress</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>readonly url="${1}"

./downmedia-download 'video' "${url}"
echo "${url}"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>359734FE-C703-415A-9038-E76AF0A25AAA</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>playadd</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Grabbing URL…</string>
				<key>script</key>
				<string>const frontmost_app_name = Application('System Events').applicationProcesses.where({ frontmost: true }).name()[0]
const frontmost_app = Application(frontmost_app_name)

const chromium_variants = ['Google Chrome', 'Chromium', 'Opera', 'Vivaldi', 'Brave Browser', 'Microsoft Edge']
const webkit_variants = ['Safari', 'Webkit']

let title, clipboard
let script_filter_items = []

// Get details from frontmost browser, if any
if (chromium_variants.some(app_name =&gt; frontmost_app_name.startsWith(app_name))) {
  title = frontmost_app.windows[0].activeTab.name()
  url = frontmost_app.windows[0].activeTab.url().trim()

  if (title.length === 0) title = 'Web page does not have a title'

  script_filter_items.push({ 'variables': { 'browser': frontmost_app_name }, 'title': title, 'subtitle': url, 'arg': url })
} else if (webkit_variants.some(app_name =&gt; frontmost_app_name.startsWith(app_name))) {
  title = frontmost_app.windows[0].currentTab.name()
  url = frontmost_app.windows[0].currentTab.url().trim()

  if (title.length === 0) title = 'Web page does not have a title'

  script_filter_items.push({ 'variables': { 'browser': frontmost_app_name }, 'title': title, 'subtitle': url, 'arg': url })
}

// Get details from clipboard
frontmost_app.includeStandardAdditions = true

clipboard = (() =&gt; {
  try {
    return frontmost_app.theClipboard()
  } catch(error) {
    console.log('Ignoring clipboard contents due to error ' + error.errorNumber + '.')
  }
})()

if (RegExp('^https?://').test(clipboard)) {
  title = 'Play clipboard URL'
  url = clipboard.trim()

  script_filter_items.push({ 'variables': { 'browser': false }, 'title': title, 'subtitle': url, 'arg': url })
}

if (script_filter_items.length === 0) {
  JSON.stringify({
    'items': [{
	  'title': 'No URL found',
      'subtitle': 'Did not find a URL in the clipboard or a supported browser as the frontmost app',
      'valid': false
    }]
  })
} else {
  JSON.stringify({ 'items': script_filter_items })
}</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Play the URL in the frontmost browser or clipboard</string>
				<key>title</key>
				<string>PlayAddress</string>
				<key>type</key>
				<integer>7</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>2C17F6E1-CA91-4D8D-B014-91010DFDCD35</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>ObjC.import('stdlib')

// Set PATH with youtube-dl
const app = Application.currentApplication()
app.includeStandardAdditions = true
const new_path = app.doShellScript($.getenv('alfred_preferences') + '/workflows/' + $.getenv('alfred_workflow_uid') + '/_sharedresources "youtubedl"')
$.setenv('PATH', new_path, 1)

// Main
const browser_name = $.getenv('browser')
const browser = Application(browser_name)
const url = $.getenv('url')
const close_browser = ($.getenv('close_tab') === 'true') ? true : false

const chromium_variants = ['Google Chrome', 'Chromium', 'Opera', 'Vivaldi', 'Brave Browser', 'Microsoft Edge']
const webkit_variants = ['Safari', 'Webkit']

if (close_browser &amp;&amp; browser_name &amp;&amp; $.system('youtube-dl --simulate --quiet ' + url) === 0) {
  if (chromium_variants.some(app_name =&gt; browser_name.startsWith(app_name))) {
    browser.windows[0].tabs().forEach(tab =&gt; { if (tab.url() === url) tab.close() })
  } else if (webkit_variants.some(app_name =&gt; browser_name.startsWith(app_name))) {
    let current_tab_index = 0
    let last_tab_index = browser.windows[0].tabs.length - 1

    while (current_tab_index &lt;= last_tab_index) {
      let tab = browser.windows[0].tabs[current_tab_index]

      if (tab.url() === url) {
        tab.close()
        last_tab_index--
      } else {
        current_tab_index++
      }
    }
  }
}</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>3238CA6D-80AE-4CD7-B09C-6297766F4936</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string></string>
				<key>passthroughargument</key>
				<false/>
				<key>variables</key>
				<dict>
					<key>url</key>
					<string>{query}</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>174651EE-D8CF-4041-B1FD-C2F8D2646EC1</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>externaltriggerid</key>
				<string>add_and_play_stream</string>
				<key>passinputasargument</key>
				<true/>
				<key>passvariables</key>
				<false/>
				<key>workflowbundleid</key>
				<string>com.vitorgalvao.alfred.watchlist</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.callexternaltrigger</string>
			<key>uid</key>
			<string>CC5C8F05-C2B1-410B-B94A-46D8B7C429B0</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>conditions</key>
				<array>
					<dict>
						<key>inputstring</key>
						<string>{var:use_watchlist}</string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>0</integer>
						<key>matchstring</key>
						<string>true</string>
						<key>outputlabel</key>
						<string>Use WatchList</string>
						<key>uid</key>
						<string>0BC66730-6EE7-4E58-B4AA-61C984B7ED91</string>
					</dict>
				</array>
				<key>elselabel</key>
				<string>else</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.conditional</string>
			<key>uid</key>
			<string>79289C24-D237-4E6E-A781-3C54066C0461</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>type</key>
			<string>alfred.workflow.utility.junction</string>
			<key>uid</key>
			<string>3AB464F1-6E2E-4CF3-A4A0-AFDA2F41AAC1</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>readonly url="${1}"
pbcopy &lt;&lt;&lt; "${url}" # Save URL to clipboard history

if [[ "$(mdfind kMDItemCFBundleIdentifier = io.mpv)" ]]; then
  PATH="$(./_sharedresources 'youtubedl')"
  video_player='mpv'
elif [[ "$(mdfind kMDItemCFBundleIdentifier = com.colliderli.iina)" ]]; then
  video_player='iina'
elif [[ "$(mdfind kMDItemCFBundleIdentifier = org.videolan.vlc)" ]]; then
  video_player='vlc'
else
  warning 'To play a stream you need mpv, iina, or vlc.'
fi

open -na "${video_player}" --args "${url}"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>197D2E43-384A-44B1-BE86-B36582E4CE52</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/${alfred_workflow_name}.alfredworkflow"
readonly download_type='direct'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  local -r terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>3F2114BA-DAA7-4DF6-BD3D-DAFD6E7439F0</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>type</key>
			<string>alfred.workflow.utility.junction</string>
			<key>uid</key>
			<string>8FE08360-28F3-4F26-8523-75D368B83282</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Run `playadd` and available options will appear to play the URL in the frontmost browser tab or your clipboard.

![](https://i.imgur.com/xeUx0lj.png)

Pick one of them and the URL will play. ⌘↵ downloads the video (requires [DownMedia](https://github.com/vitorgalvao/alfred-workflows/tree/master/DownMedia)).

If the `close_tab` Workflow Environment Variable is `true` and the URL is supported, the browser tabs with the matching URL will close.

If the `use_watchlist` Workflow Environment Variable is `true`, streams will be added and played from [WatchList](https://github.com/vitorgalvao/alfred-workflows/tree/master/WatchList) (a separate Workflow).

To play a stream you need [mpv](http://mpv.io/), [IINA](https://lhc70000.github.io/iina/), or [VLC](http://www.videolan.org/vlc/index.html).</string>
	<key>uidata</key>
	<dict>
		<key>174651EE-D8CF-4041-B1FD-C2F8D2646EC1</key>
		<dict>
			<key>xpos</key>
			<integer>495</integer>
			<key>ypos</key>
			<integer>55</integer>
		</dict>
		<key>197D2E43-384A-44B1-BE86-B36582E4CE52</key>
		<dict>
			<key>note</key>
			<string>Play video</string>
			<key>xpos</key>
			<integer>495</integer>
			<key>ypos</key>
			<integer>340</integer>
		</dict>
		<key>2C17F6E1-CA91-4D8D-B014-91010DFDCD35</key>
		<dict>
			<key>xpos</key>
			<integer>35</integer>
			<key>ypos</key>
			<integer>25</integer>
		</dict>
		<key>3238CA6D-80AE-4CD7-B09C-6297766F4936</key>
		<dict>
			<key>note</key>
			<string>Close browser tab</string>
			<key>xpos</key>
			<integer>665</integer>
			<key>ypos</key>
			<integer>25</integer>
		</dict>
		<key>359734FE-C703-415A-9038-E76AF0A25AAA</key>
		<dict>
			<key>note</key>
			<string>Download video</string>
			<key>xpos</key>
			<integer>255</integer>
			<key>ypos</key>
			<integer>25</integer>
		</dict>
		<key>3AB464F1-6E2E-4CF3-A4A0-AFDA2F41AAC1</key>
		<dict>
			<key>xpos</key>
			<integer>335</integer>
			<key>ypos</key>
			<integer>205</integer>
		</dict>
		<key>3F2114BA-DAA7-4DF6-BD3D-DAFD6E7439F0</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>665</integer>
			<key>ypos</key>
			<integer>340</integer>
		</dict>
		<key>79289C24-D237-4E6E-A781-3C54066C0461</key>
		<dict>
			<key>xpos</key>
			<integer>155</integer>
			<key>ypos</key>
			<integer>205</integer>
		</dict>
		<key>8FE08360-28F3-4F26-8523-75D368B83282</key>
		<dict>
			<key>xpos</key>
			<integer>335</integer>
			<key>ypos</key>
			<integer>370</integer>
		</dict>
		<key>CC5C8F05-C2B1-410B-B94A-46D8B7C429B0</key>
		<dict>
			<key>note</key>
			<string>Play video through WatchList</string>
			<key>xpos</key>
			<integer>665</integer>
			<key>ypos</key>
			<integer>175</integer>
		</dict>
	</dict>
	<key>variables</key>
	<dict>
		<key>close_tab</key>
		<string>true</string>
		<key>use_watchlist</key>
		<string>true</string>
	</dict>
	<key>variablesdontexport</key>
	<array>
		<string>use_watchlist</string>
	</array>
	<key>version</key>
	<string>21.8</string>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
