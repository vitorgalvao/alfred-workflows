<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.denteazul</string>
	<key>connections</key>
	<dict>
		<key>4DAC0280-12D9-4F87-BE88-28416F84BA04</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>38192AA8-F21D-467B-91B2-9BC1000C3106</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>6DC6A16C-DD83-4EBC-B2E0-625FB1BCF1AD</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>92F90D27-0051-41F8-B6C1-7CED843FB32F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>75C921E4-2503-460C-A531-3D3F4EC85976</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>4DAC0280-12D9-4F87-BE88-28416F84BA04</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>92F90D27-0051-41F8-B6C1-7CED843FB32F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>38192AA8-F21D-467B-91B2-9BC1000C3106</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Toggle bluetooth and paired device connectivity</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>DenteAzul</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<true/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>btt</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Gathering bluetooth status…</string>
				<key>script</key>
				<string>require 'json'
require 'open3'

ENV['PATH'] = Open3.capture2('./_sharedresources', 'blueutil').first

script_filter_items = []

if Open3.capture2('blueutil', '--power').first.to_i.zero?
  current_state = 'Off'
  toggle_state = 'on'
  icon = 'icon_alt.png'
else
  current_state = 'On'
  toggle_state = 'off'
  icon = 'icon.png'
end

script_filter_items.push(title: "Bluetooth is #{current_state}", subtitle: "Action to turn it #{toggle_state}", arg: toggle_state, icon: { path: icon })

puts({ items: script_filter_items }.to_json)</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>When turning bluetooth on, make it visible in the menu bar</string>
				<key>title</key>
				<string>Toggle Bluetooth and Menu Bar Visibility</string>
				<key>type</key>
				<integer>2</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>75C921E4-2503-460C-A531-3D3F4EC85976</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>on switchBluetooth(setState)	tell application "System Preferences"		reveal pane id "com.apple.preferences.Bluetooth"		tell application "System Events" to tell process "System Preferences"			set boxToggle to checkbox "Show Bluetooth in menu bar" of window "Bluetooth"						if setState is "on" then				click button "Turn Bluetooth On" of window "Bluetooth"				tell boxToggle to if not (its value as boolean) then click boxToggle			else				click button "Turn Bluetooth Off" of window "Bluetooth"				tell boxToggle to if (its value as boolean) then click boxToggle			end if		end tell	end tell	tell application "System Preferences" to quitend switchBluetoothswitchBluetooth("{query}")</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>6</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>4DAC0280-12D9-4F87-BE88-28416F84BA04</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/${alfred_workflow_name}.alfredworkflow"
readonly download_type='direct'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  local -r terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>38192AA8-F21D-467B-91B2-9BC1000C3106</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>PATH="$(./_sharedresources 'blueutil')"

address="${1}"

[[ "${connected}" == 'true' ]] &amp;&amp; blueutil --disconnect "${address}" || blueutil --connect "${address}"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>92F90D27-0051-41F8-B6C1-7CED843FB32F</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<true/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>btd</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Gathering devices info…</string>
				<key>script</key>
				<string>require 'json'
require 'open3'

ENV['PATH'] = Open3.capture2('./_sharedresources', 'blueutil').first

paired_devices = JSON.parse(Open3.capture2('blueutil', '--format', 'json', '--paired').first)
script_filter_items = []

paired_devices.each do |device|
  state = device['connected'] ? 'Connected' : 'Not Connected'
  icon = device['connected'] ? 'icon.png' : 'icon_alt.png'

  script_filter_items.push(uid: device['address'], title: device['name'], subtitle: state, arg: device['address'], icon: { path: icon }, variables: { connected: device['connected'].to_s })
end

if script_filter_items.empty?
  puts({ items: [title: 'No paired devices found'] }.to_json)
  exit 0
end

puts({ items: script_filter_items }.to_json)</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Selected one to toggle connection status</string>
				<key>title</key>
				<string>Show Paired Bluetooth Devices</string>
				<key>type</key>
				<integer>2</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>6DC6A16C-DD83-4EBC-B2E0-625FB1BCF1AD</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Use `btt` to view and toggle bluetooth status and its menu bar visibility.

![](https://i.imgur.com/Wjry0Nv.png)

`btd` will show your paired devices. Action them to toggle their connection status

![](https://i.imgur.com/1nGd8bP.png)</string>
	<key>uidata</key>
	<dict>
		<key>38192AA8-F21D-467B-91B2-9BC1000C3106</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>475</integer>
			<key>ypos</key>
			<integer>25</integer>
		</dict>
		<key>4DAC0280-12D9-4F87-BE88-28416F84BA04</key>
		<dict>
			<key>xpos</key>
			<integer>265</integer>
			<key>ypos</key>
			<integer>25</integer>
		</dict>
		<key>6DC6A16C-DD83-4EBC-B2E0-625FB1BCF1AD</key>
		<dict>
			<key>note</key>
			<string>Show Paired Bluetooth Devices</string>
			<key>xpos</key>
			<integer>35</integer>
			<key>ypos</key>
			<integer>185</integer>
		</dict>
		<key>75C921E4-2503-460C-A531-3D3F4EC85976</key>
		<dict>
			<key>note</key>
			<string>Toggle Bluetooh and Menu Bar Visibility</string>
			<key>xpos</key>
			<integer>35</integer>
			<key>ypos</key>
			<integer>25</integer>
		</dict>
		<key>92F90D27-0051-41F8-B6C1-7CED843FB32F</key>
		<dict>
			<key>xpos</key>
			<integer>265</integer>
			<key>ypos</key>
			<integer>185</integer>
		</dict>
	</dict>
	<key>version</key>
	<string>21.5</string>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
