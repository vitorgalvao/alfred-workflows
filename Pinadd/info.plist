<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string></string>
	<key>connections</key>
	<dict>
		<key>0718E194-44CD-456D-8031-0285E37A54A7</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>A3481C3B-1483-419B-96C7-CB2CC0A40433</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>3DC2C092-281B-435F-ACB6-B7624A4B74B0</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>6E399669-A98B-436E-BF47-3F0AAECBE1C1</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>6C8FF314-EEEF-451F-91B8-6CD96557ADB6</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>C0360AFB-6A8A-4A80-8FE4-87340F157AD3</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>0718E194-44CD-456D-8031-0285E37A54A7</string>
				<key>modifiers</key>
				<integer>524288</integer>
				<key>modifiersubtext</key>
				<string>Add bookmark as private</string>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>3DC2C092-281B-435F-ACB6-B7624A4B74B0</string>
				<key>modifiers</key>
				<integer>131072</integer>
				<key>modifiersubtext</key>
				<string>Write settings (API token followed by browser)</string>
			</dict>
		</array>
		<key>C0360AFB-6A8A-4A80-8FE4-87340F157AD3</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>A3481C3B-1483-419B-96C7-CB2CC0A40433</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Takes arguments as tags — adds your browser&apos;s frontmost tab as a pinboard bookmark</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>PinAdd</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>keyword</key>
				<string>pin</string>
				<key>subtext</key>
				<string>Takes arguments as tags — adds your browser&apos;s frontmost tab as a pinboard bookmark</string>
				<key>text</key>
				<string>PinAdd</string>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>6C8FF314-EEEF-451F-91B8-6CD96557ADB6</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># Set your API Token here (get it at &quot;https://pinboard.in/settings/password&quot;)
token=&quot;$(cat settings | sed -n 1p)&quot;

# Set your prefered browser (comment with a &quot;#&quot; the one you do not want to use)
browser=&quot;$(cat settings | sed -n 2p)&quot;

# Check if token and browser are set
# If not, redirect to webpage with instructions
if [[ ! -s settings ]]; then
  osascript -e &apos;open location &quot;http://is.gd/RoBwUR&quot;&apos;
  exit 1
fi

# Get browser&apos;s frontmost tab&apos;s url and title, and set the tags for Pinboard
# Arguments must be url-encoded (hence the &apos;perl&apos;)
if [[ $(echo ${browser} | tr [:upper:] [:lower:]) == &quot;chrome&quot; ]]; then
  url=$(osascript -e &apos;tell application &quot;Google Chrome&quot; to return URL of active tab of front window&apos; | perl -MURI::Escape -wlne &apos;print uri_escape ($_)&apos;)
  title=$(osascript -e &apos;tell application &quot;Google Chrome&quot; to return title of active tab of front window&apos; | perl -MURI::Escape -wlne &apos;print uri_escape ($_)&apos;)
elif [[ $(echo ${browser} | tr [:upper:] [:lower:]) == &quot;safari&quot; ]]; then
  url=$(osascript -e &apos;tell application &quot;Safari&quot; to return URL of front document&apos; | perl -MURI::Escape -wlne &apos;print uri_escape ($_)&apos;)
  title=$(osascript -e &apos;tell application &quot;Safari&quot; to return name of front document&apos; | perl -MURI::Escape -wlne &apos;print uri_escape ($_)&apos;)
elif [[ $(echo ${browser} | tr [:upper:] [:lower:]) == &quot;webkit&quot; ]]; then
  url=$(osascript -e &apos;tell application &quot;Webkit&quot; to return URL of front document&apos; | perl -MURI::Escape -wlne &apos;print uri_escape ($_)&apos;)
  title=$(osascript -e &apos;tell application &quot;Webkit&quot; to return name of front document&apos; | perl -MURI::Escape -wlne &apos;print uri_escape ($_)&apos;)
elif [[ $(echo ${browser} | tr [:upper:] [:lower:]) == &quot;chrome_canary&quot; ]]; then
  url=$(osascript -e &apos;tell application &quot;Google Chrome Canary&quot; to return URL of active tab of front window&apos; | perl -MURI::Escape -wlne &apos;print uri_escape ($_)&apos;)
  title=$(osascript -e &apos;tell application &quot;Google Chrome Canary&quot; to return title of active tab of front window&apos; | perl -MURI::Escape -wlne &apos;print uri_escape ($_)&apos;)
fi

tags=$(echo &quot;{query}&quot; | perl -MURI::Escape -wlne &apos;print uri_escape ($_)&apos;)

# Add the bookmark
curl --silent &quot;https://api.pinboard.in/v1/posts/add?url=${url}&amp;description=${title}&amp;tags=${tags}&amp;auth_token=${token}&quot;

exit 0</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>0718E194-44CD-456D-8031-0285E37A54A7</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>output</key>
				<integer>0</integer>
				<key>removeextension</key>
				<false/>
				<key>sticky</key>
				<false/>
				<key>text</key>
				<string>Bookmark added</string>
				<key>title</key>
				<string>PinAdd</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>A3481C3B-1483-419B-96C7-CB2CC0A40433</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># Set your API Token here (get it at &quot;https://pinboard.in/settings/password&quot;)
token=&quot;$(cat settings | sed -n 1p)&quot;

# Set your prefered browser (comment with a &quot;#&quot; the one you do not want to use)
browser=&quot;$(cat settings | sed -n 2p)&quot;

# Check if token and browser are set
# If not, redirect to webpage with instructions
if [[ ! -s settings ]]; then
  osascript -e &apos;open location &quot;http://is.gd/RoBwUR&quot;&apos;
  exit 1
fi

# Get browser&apos;s frontmost tab&apos;s url and title, and set the tags for Pinboard
# Arguments must be url-encoded (hence the &apos;perl&apos;)
if [[ $(echo ${browser} | tr [:upper:] [:lower:]) == &quot;chrome&quot; ]]; then
  url=$(osascript -e &apos;tell application &quot;Google Chrome&quot; to return URL of active tab of front window&apos; | perl -MURI::Escape -wlne &apos;print uri_escape ($_)&apos;)
  title=$(osascript -e &apos;tell application &quot;Google Chrome&quot; to return title of active tab of front window&apos; | perl -MURI::Escape -wlne &apos;print uri_escape ($_)&apos;)
elif [[ $(echo ${browser} | tr [:upper:] [:lower:]) == &quot;safari&quot; ]]; then
  url=$(osascript -e &apos;tell application &quot;Safari&quot; to return URL of front document&apos; | perl -MURI::Escape -wlne &apos;print uri_escape ($_)&apos;)
  title=$(osascript -e &apos;tell application &quot;Safari&quot; to return name of front document&apos; | perl -MURI::Escape -wlne &apos;print uri_escape ($_)&apos;)
elif [[ $(echo ${browser} | tr [:upper:] [:lower:]) == &quot;webkit&quot; ]]; then
  url=$(osascript -e &apos;tell application &quot;Webkit&quot; to return URL of front document&apos; | perl -MURI::Escape -wlne &apos;print uri_escape ($_)&apos;)
  title=$(osascript -e &apos;tell application &quot;Webkit&quot; to return name of front document&apos; | perl -MURI::Escape -wlne &apos;print uri_escape ($_)&apos;)
elif [[ $(echo ${browser} | tr [:upper:] [:lower:]) == &quot;chrome_canary&quot; ]]; then
  url=$(osascript -e &apos;tell application &quot;Google Chrome Canary&quot; to return URL of active tab of front window&apos; | perl -MURI::Escape -wlne &apos;print uri_escape ($_)&apos;)
  title=$(osascript -e &apos;tell application &quot;Google Chrome Canary&quot; to return title of active tab of front window&apos; | perl -MURI::Escape -wlne &apos;print uri_escape ($_)&apos;)
fi

tags=$(echo &quot;{query}&quot; | perl -MURI::Escape -wlne &apos;print uri_escape ($_)&apos;)

# Add the bookmark
curl --silent &quot;https://api.pinboard.in/v1/posts/add?url=${url}&amp;description=${title}&amp;tags=${tags}&amp;auth_token=${token}&quot;

exit 0</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>C0360AFB-6A8A-4A80-8FE4-87340F157AD3</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>output</key>
				<integer>0</integer>
				<key>removeextension</key>
				<false/>
				<key>sticky</key>
				<false/>
				<key>text</key>
				<string>Configuration done</string>
				<key>title</key>
				<string>PinAdd</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>6E399669-A98B-436E-BF47-3F0AAECBE1C1</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string>token=$(cut -d &quot; &quot; -f1 &lt;(echo &quot;{query}&quot;))
browser=$(cut -d &quot; &quot; -f2 &lt;(echo &quot;{query}&quot;))

rm settings

echo ${token} &gt;&gt; settings
echo ${browser} &gt;&gt; settings</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>3DC2C092-281B-435F-ACB6-B7624A4B74B0</string>
		</dict>
	</array>
	<key>readme</key>
	<string></string>
	<key>uidata</key>
	<dict>
		<key>0718E194-44CD-456D-8031-0285E37A54A7</key>
		<dict>
			<key>ypos</key>
			<real>130</real>
		</dict>
		<key>3DC2C092-281B-435F-ACB6-B7624A4B74B0</key>
		<dict>
			<key>ypos</key>
			<real>260</real>
		</dict>
		<key>6C8FF314-EEEF-451F-91B8-6CD96557ADB6</key>
		<dict>
			<key>ypos</key>
			<real>10</real>
		</dict>
		<key>6E399669-A98B-436E-BF47-3F0AAECBE1C1</key>
		<dict>
			<key>ypos</key>
			<real>260</real>
		</dict>
		<key>A3481C3B-1483-419B-96C7-CB2CC0A40433</key>
		<dict>
			<key>ypos</key>
			<real>10</real>
		</dict>
		<key>C0360AFB-6A8A-4A80-8FE4-87340F157AD3</key>
		<dict>
			<key>ypos</key>
			<real>10</real>
		</dict>
	</dict>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
