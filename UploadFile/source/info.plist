<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.uploadfile</string>
	<key>connections</key>
	<dict>
		<key>3444071E-B0B8-4C12-9699-210912A13E67</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>D503A9AC-59F1-4C55-816D-CAC532C04442</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>A697CADF-6E4A-4C9D-8D61-A8BFCE2DACA4</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>55E5D2C8-6F1C-416A-B7D8-C27393CF7485</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string>Cancel upload</string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>DEA90A14-B8E3-469F-B314-4F347CF478B3</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>3444071E-B0B8-4C12-9699-210912A13E67</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Upload files and directories for easy sharing</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>UploadFile</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>echo "${1}" &gt;&amp;2
./uploadfile upload "${@}"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>3444071E-B0B8-4C12-9699-210912A13E67</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/${alfred_workflow_name}.alfredworkflow"
readonly download_type='direct'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  local -r terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>D503A9AC-59F1-4C55-816D-CAC532C04442</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>acceptsmulti</key>
				<true/>
				<key>filetypes</key>
				<array/>
				<key>name</key>
				<string>Upload file</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.action</string>
			<key>uid</key>
			<string>DEA90A14-B8E3-469F-B314-4F347CF478B3</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>./uploadfile abort</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>55E5D2C8-6F1C-416A-B7D8-C27393CF7485</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>ufp</string>
				<key>queuedelaycustom</key>
				<integer>1</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Please wait…</string>
				<key>script</key>
				<string>require 'json'

progressfile = '/tmp/uploadfile_progress'
namefile = '/tmp/uploadfile_name'

if File.exist?(progressfile)
  filename = IO.readlines(namefile)[0]
  progress = IO.readlines(progressfile)[0].sub(%r{.*\s}, '').strip

  script_filter_content = {
    rerun: 1,
    items: [
      title: "#{ENV['alfred_workflow_name']} Progress",
      subtitle: "#{progress} / #{filename}",
      valid: false,
      mods: { cmd: { valid: true } }
    ]
  }
elsif ENV['state'].nil?
  script_filter_content = {
    rerun: 3,
    variables: { state: 'stopped' },
    items: [
      title: "#{ENV['alfred_workflow_name']} Progress",
      subtitle: 'Checking for uploads in queue…',
      valid: false
    ]
  }
else # state == 'stopped'
  script_filter_content = {
    rerun: 3,
    items: [
      title: "#{ENV['alfred_workflow_name']} Progress",
      subtitle: 'All uploads finished!',
      valid: false
    ]
  }
end

puts(script_filter_content.to_json)</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Shows progress of the current UploadFile upload</string>
				<key>title</key>
				<string>UploadFile Progress</string>
				<key>type</key>
				<integer>2</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>A697CADF-6E4A-4C9D-8D61-A8BFCE2DACA4</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Upload to a myriad of file hosts directly from Alfred.

Pick paths to upload via the `Upload file` `File Action`. Directories and multiple paths will be zipped prior to upload.

![](https://i.imgur.com/plZ8LIt.png)

You can check your upload progress with `ufp`.

![](https://i.imgur.com/AYysM1w.png)

It will auto-refresh the progress. Press ⌘↵ to cancel the transfer.

You’ll get notifications of the various phases, with a sound when it’s complete (or canceled). The download URL will be copied to your clipboard.

You can change the upload host in the `upload_file_to` Workflow Environment Variable. Supported hosts are: [transfer.sh](http://transfer.sh), [0x0.st](https://0x0.st/), [arxius.io](https://arxius.io/), [bayfiles.com](https://bayfiles.com/), [anonfile.com](https://anonfile.com/), [megaupload.is](https://megaupload.is/), and [forumfiles.com](https://forumfiles.com/).</string>
	<key>uidata</key>
	<dict>
		<key>3444071E-B0B8-4C12-9699-210912A13E67</key>
		<dict>
			<key>xpos</key>
			<integer>435</integer>
			<key>ypos</key>
			<integer>25</integer>
		</dict>
		<key>55E5D2C8-6F1C-416A-B7D8-C27393CF7485</key>
		<dict>
			<key>xpos</key>
			<integer>435</integer>
			<key>ypos</key>
			<integer>145</integer>
		</dict>
		<key>A697CADF-6E4A-4C9D-8D61-A8BFCE2DACA4</key>
		<dict>
			<key>xpos</key>
			<integer>235</integer>
			<key>ypos</key>
			<integer>145</integer>
		</dict>
		<key>D503A9AC-59F1-4C55-816D-CAC532C04442</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>625</integer>
			<key>ypos</key>
			<integer>25</integer>
		</dict>
		<key>DEA90A14-B8E3-469F-B314-4F347CF478B3</key>
		<dict>
			<key>xpos</key>
			<integer>35</integer>
			<key>ypos</key>
			<integer>25</integer>
		</dict>
	</dict>
	<key>variables</key>
	<dict>
		<key>upload_file_to</key>
		<string>transfer.sh</string>
	</dict>
	<key>version</key>
	<string>21.4</string>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
