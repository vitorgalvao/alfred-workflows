<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.vitorgalvao.alfred.keycodes</string>
	<key>category</key>
	<string>Tools</string>
	<key>connections</key>
	<dict>
		<key>74624B78-0F5A-499C-9F61-8E0D17FE3303</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>6EBA946F-DFCB-410F-89E6-B38A1B0E3692</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Translate keyboard keys to AppleScript key codes</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>KeyCodes</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>fixedorder</key>
				<true/>
				<key>items</key>
				<string>[{"title":"⎋ \/ Escape","arg":"53","subtitle":"53"},{"title":"⌘ \/ Command","arg":"55","subtitle":"55"},{"title":"⌥ \/ Option \/ Alt (left)","arg":"58","subtitle":"58"},{"title":"⌥ \/ Option \/ Alt (right)","arg":"61","subtitle":"61"},{"title":"⌃ \/ Control (left)","arg":"59","subtitle":"59"},{"title":"⌃ \/ Control (right)","arg":"62","subtitle":"62"},{"title":"⇧ \/ Shift (left)","arg":"56","subtitle":"56"},{"title":"⇧ \/ Shift (right)","arg":"60","subtitle":"60"},{"title":"⇪ \/ Caps Lock","arg":"57","subtitle":"57"},{"title":"⏎ \/ Return","arg":"36","subtitle":"36"},{"title":"⌤ \/ Enter","arg":"76","subtitle":"76"},{"title":"⇥ \/ Tab","arg":"48","subtitle":"48"},{"title":"␣ \/ Space","arg":"49","subtitle":"49"},{"title":"⌫ \/ Delete \/ Backspace","arg":"51","subtitle":"51"},{"title":"⌦ \/ Forward Delete","arg":"117","subtitle":"117"},{"title":"← \/ Left Arrow","arg":"123","subtitle":"123"},{"title":"→ \/ Right Arrow","arg":"124","subtitle":"124"},{"title":"↓ \/ Down Arrow","arg":"125","subtitle":"125"},{"title":"↑ \/ Up Arrow","arg":"126","subtitle":"126"},{"title":"⇞ \/ Page Up","arg":"116","subtitle":"116"},{"title":"⇟ \/ Page Down","arg":"121","subtitle":"121"},{"title":"⇱ \/ Home","arg":"115","subtitle":"115"},{"title":"⇲ \/ End","arg":"119","subtitle":"119"},{"title":"fn","arg":"63","subtitle":"63"},{"title":"F1","arg":"122","subtitle":"122"},{"title":"F2","arg":"120","subtitle":"120"},{"title":"F3","arg":"99","subtitle":"99"},{"title":"F4","arg":"118","subtitle":"118"},{"title":"F5","arg":"96","subtitle":"96"},{"title":"F6","arg":"97","subtitle":"97"},{"title":"F7","arg":"98","subtitle":"98"},{"title":"F8","arg":"100","subtitle":"100"},{"title":"F9","arg":"101","subtitle":"101"},{"title":"F10","arg":"109","subtitle":"109"},{"title":"F11","arg":"103","subtitle":"103"},{"title":"F12","arg":"111","subtitle":"111"},{"title":"F13","arg":"105","subtitle":"105"},{"title":"F14","arg":"107","subtitle":"107"},{"title":"F15","arg":"113","subtitle":"113"},{"title":"F16","arg":"106","subtitle":"106"},{"title":"F17","arg":"64","subtitle":"64"},{"title":"F18","arg":"79","subtitle":"79"},{"title":"F19","arg":"80","subtitle":"80"},{"title":"F20","arg":"90","subtitle":"90"}]</string>
				<key>keyword</key>
				<string>kc</string>
				<key>runningsubtext</key>
				<string></string>
				<key>subtext</key>
				<string>Translate keyboard keys to AppleScript key codes</string>
				<key>title</key>
				<string>KeyCodes</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.listfilter</string>
			<key>uid</key>
			<string>74624B78-0F5A-499C-9F61-8E0D17FE3303</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>autopaste</key>
				<false/>
				<key>clipboardtext</key>
				<string>{query}</string>
				<key>transient</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.clipboard</string>
			<key>uid</key>
			<string>6EBA946F-DFCB-410F-89E6-B38A1B0E3692</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>kc</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string></string>
				<key>script</key>
				<string>readonly remote_info_plist="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/source/info.plist"
readonly workflow_url="https://raw.githubusercontent.com/vitorgalvao/alfred-workflows/master/${alfred_workflow_name}/${alfred_workflow_name}.alfredworkflow"
readonly workflow_type='workflow'
readonly frequency_check='15'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED UNLESS YOU KNOW WHAT YOU ARE DOING
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  readonly local notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/MacOS/applet" "${1}" "${alfred_workflow_name}" 'A new version is available'
    return
  fi

  readonly local terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${workflow_type}" =~ ^(workflow|page)$ ]] || abort "'workflow_type' (${workflow_type}) needs to be one of 'workflow' or 'page'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" != "${remote_version}" ]]; then
    if [[ "${workflow_type}" == 'page' ]]; then
      notification 'Opening download page…'
      open "${workflow_url}"
    else
      if url_exists "${workflow_url}"; then
        notification 'Downloading and installing…'
        curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${workflow_url}"
        open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
      else
        abort "'workflow_url' (${workflow_url}) appears to not be reachable."
      fi # url_exists
    fi # workflow_type
  else
    touch "${local_info_plist}" # Reset timer by touching local file
  fi # diff
fi #find</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>BAD75407-88AB-417F-93C9-1A431051FA3E</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Quick reference for when you need to `tell application "System Events" to key code` in AppleScript. Call it with `kc`.

![](https://i.imgur.com/KHDOVU8.png)

Type a search term to filter keys.

![](https://i.imgur.com/lROgksC.png)</string>
	<key>uidata</key>
	<dict>
		<key>6EBA946F-DFCB-410F-89E6-B38A1B0E3692</key>
		<dict>
			<key>xpos</key>
			<integer>190</integer>
			<key>ypos</key>
			<integer>30</integer>
		</dict>
		<key>74624B78-0F5A-499C-9F61-8E0D17FE3303</key>
		<dict>
			<key>xpos</key>
			<integer>40</integer>
			<key>ypos</key>
			<integer>30</integer>
		</dict>
		<key>BAD75407-88AB-417F-93C9-1A431051FA3E</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>40</integer>
			<key>ypos</key>
			<integer>150</integer>
		</dict>
	</dict>
	<key>version</key>
	<string>1.0.2</string>
	<key>webaddress</key>
	<string>http://vitorgalvao.com/</string>
</dict>
</plist>
